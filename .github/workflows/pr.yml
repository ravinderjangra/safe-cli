name: PR

on:
  pull_request:
    branches: master

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-D warnings"

jobs:
  clippy:
    name: Rustfmt-Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features

  build-ffi-android:
    name: Build FFI Android
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [armv7-linux-androideabi, x86_64-linux-android]
        type: [dev, prod]
    env:
      SAFE_API_BUILD_COMPONENT: safe-ffi
      SAFE_API_BUILD_TYPE: ${{ matrix.type }}
      SAFE_API_BUILD_TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v1
      - shell: bash
        run: make build-component
      - uses: actions/upload-artifact@master
        with:
          name: safe-ffi-${{ matrix.target }}-${{ matrix.type }}
          path: artifacts

  #build-ffi-ios:
    #name: Build FFI iOS
    #runs-on: macOS-latest
    #strategy:
      #matrix:
        #target: [aarch64-apple-ios, x86_64-apple-ios]
    #env:
      ##RUST_SODIUM_LIB_DIR: /Users/runner/libsodium
      #DEVELOPER_DIR: /Applications/Xcode_11.2.app/Contents/Developer
    #steps:
      # Remove when rust_sodium is dealt with.
      #- shell: bash
        #run: |
          #brew install curl
          #curl -O https://libsodium.s3.amazonaws.com/libsodium-1.0.17-stable-macos.tar.gz
          #mkdir $HOME/libsodium
          #mv libsodium-1.0.17-stable-macos.tar.gz $HOME/libsodium
          #cd $HOME/libsodium
          #tar xvf libsodium-1.0.17-stable-macos.tar.gz
          #rm libsodium-1.0.17-stable-macos.tar.gz
      #- uses: actions/checkout@v1
      #- uses: actions-rs/toolchain@v1
        #with:
          #profile: minimal
          #toolchain: stable
          #override: true
          #target: ${{ matrix.target }}
      #- uses: actions-rs/cargo@v1
        #with:
          #command: build
          #args: --release --manifest-path=safe-ffi/Cargo.toml --target=${{ matrix.target }}
      #- uses: actions/upload-artifact@master
        #with:
          #name: safe-ffi-${{ matrix.target }}-prod
          #path: target/${{ matrix.target }}/release
      #- uses: actions-rs/cargo@v1
        #with:
          #command: build
          #args: --release --manifest-path=safe-ffi/Cargo.toml --target=${{ matrix.target }} --features=mock-network
      #- shell: bash
        #run: |
          #mkdir artifacts
          #find "target/${{ matrix.target }}/release" -maxdepth 1 -type f -exec cp '{}' artifacts \;
      #- uses: actions/upload-artifact@master
        #with:
          #name: safe-ffi-${{ matrix.target }}-dev
          #path: target/${{ matrix.target }}/release

  #build-ffi-ios-universal:
    #name: Build FFI iOS Universal
    #runs-on: macOS-latest
    #needs: build-ffi-ios
    #steps:
      #- uses: actions/checkout@v1
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-x86_64-apple-ios-dev
          #path: artifacts/safe-ffi/dev/x86_64-apple-ios/release
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-x86_64-apple-ios-prod
          #path: artifacts/safe-ffi/prod/x86_64-apple-ios/release
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-aarch64-apple-ios-dev
          #path: artifacts/safe-ffi/dev/aarch64-apple-ios/release
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-aarch64-apple-ios-prod
          #path: artifacts/safe-ffi/prod/aarch64-apple-ios/release
      #- shell: bash
        #run: make universal-ios-lib
      #- uses: actions/upload-artifact@master
        #with:
          #name: safe-ffi-apple-ios-dev
          #path: artifacts/safe-ffi/dev/universal
      #- uses: actions/upload-artifact@master
        #with:
          #name: safe-ffi-apple-ios-prod
          #path: artifacts/safe-ffi/prod/universal

  #build-ffi-ios-universal:
    #name: Build FFI iOS Universal
    #runs-on: macOS-latest
    #needs: build-ffi-ios
    #steps:
      #- uses: actions/checkout@v1
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-x86_64-apple-ios-dev
          #path: artifacts/safe-ffi/dev/x86_64-apple-ios/release
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-x86_64-apple-ios-prod
          #path: artifacts/safe-ffi/prod/x86_64-apple-ios/release
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-aarch64-apple-ios-dev
          #path: artifacts/safe-ffi/dev/aarch64-apple-ios/release
      #- uses: actions/download-artifact@master
        #with:
          #name: safe-ffi-aarch64-apple-ios-prod
          #path: artifacts/safe-ffi/prod/aarch64-apple-ios/release
      #- shell: bash
        #run: make universal-ios-lib
      #- uses: actions/upload-artifact@master
        #with:
          #name: safe-ffi-apple-ios-dev
          #path: artifacts/safe-ffi/dev/universal
      #- uses: actions/upload-artifact@master
        #with:
          #name: safe-ffi-apple-ios-prod
          #path: artifacts/safe-ffi/prod/universal

  # Add macOS-latest to the matrix when rust_sodium has been removed.
  test-component:
    name: Test Component
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        component: [api-tests, cli-tests, e2e-authd-mock-tests, e2e-authd-vault-tests]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - shell: bash
        run: ./resources/test-scripts/${{ matrix.component }}
